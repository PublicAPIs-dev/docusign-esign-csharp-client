/* 
 * DocuSign REST API
 *
 * The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
 *
 * OpenAPI spec version: v2.1
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = DocuSign.eSign.Client.SwaggerDateConverter;

namespace DocuSign.eSign.Model
{
    /// <summary>
    /// DelayedRoutingApiModel
    /// </summary>
    [DataContract]
    public partial class DelayedRoutingApiModel :  IEquatable<DelayedRoutingApiModel>, IValidatableObject
    {
        public DelayedRoutingApiModel()
        {
            // Empty Constructor
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DelayedRoutingApiModel" /> class.
        /// </summary>
        /// <param name="ResumeDate">ResumeDate.</param>
        /// <param name="Rules">Rules.</param>
        /// <param name="Status">Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later..</param>
        public DelayedRoutingApiModel(string ResumeDate = default(string), List<EnvelopeDelayRuleApiModel> Rules = default(List<EnvelopeDelayRuleApiModel>), string Status = default(string))
        {
            this.ResumeDate = ResumeDate;
            this.Rules = Rules;
            this.Status = Status;
        }
        
        /// <summary>
        /// Gets or Sets ResumeDate
        /// </summary>
        [DataMember(Name="ResumeDate", EmitDefaultValue=false)]
        public string ResumeDate { get; set; }
        /// <summary>
        /// Gets or Sets Rules
        /// </summary>
        [DataMember(Name="Rules", EmitDefaultValue=false)]
        public List<EnvelopeDelayRuleApiModel> Rules { get; set; }
        /// <summary>
        /// Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.
        /// </summary>
        /// <value>Indicates the envelope status. Valid values are:  * sent - The envelope is sent to the recipients.  * created - The envelope is saved as a draft and can be modified and sent later.</value>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public string Status { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DelayedRoutingApiModel {\n");
            sb.Append("  ResumeDate: ").Append(ResumeDate).Append("\n");
            sb.Append("  Rules: ").Append(Rules).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as DelayedRoutingApiModel);
        }

        /// <summary>
        /// Returns true if DelayedRoutingApiModel instances are equal
        /// </summary>
        /// <param name="other">Instance of DelayedRoutingApiModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DelayedRoutingApiModel other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ResumeDate == other.ResumeDate ||
                    this.ResumeDate != null &&
                    this.ResumeDate.Equals(other.ResumeDate)
                ) && 
                (
                    this.Rules == other.Rules ||
                    this.Rules != null &&
                    this.Rules.SequenceEqual(other.Rules)
                ) && 
                (
                    this.Status == other.Status ||
                    this.Status != null &&
                    this.Status.Equals(other.Status)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ResumeDate != null)
                    hash = hash * 59 + this.ResumeDate.GetHashCode();
                if (this.Rules != null)
                    hash = hash * 59 + this.Rules.GetHashCode();
                if (this.Status != null)
                    hash = hash * 59 + this.Status.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }
}
